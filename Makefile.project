_SMEKA_project = 1


# Contains specific default information for this project

# Step this version upon new versions
PROJECT_VERSION = 0.3

# These are constant default
PROJECT_NAME = ncdf

# Define custom options for fdict
STATIC ?= 1
# If the library was built previously,
# we default to building the shared library.
ifneq ("","$(wildcard libncdf.so)")
 SHARED ?= 1
else
 SHARED ?= 0
endif

# Create the list of libraries
ifeq ($(STATIC),1)
  LIBRARIES += libncdf.a
endif
ifeq ($(SHARED),1)
  LIBRARIES += libncdf.so
  # Forcefully denote that objects should have
  # position independent code
  # THIS IS A SMEKA SETTING
  PIC = 1
endif


# Silence the error messages when piping
PIPE_SILENT ?= 2> /dev/null


# Create custom installation of modules
.NOTPARALLEL: install_mod
smeka-install: install_mod
install_mod:
	install -pm $(_OCT_rwrr) -t $(FMOD_DIR) $(F_MODS)

.NOTPARALLEL: install_settings
smeka-install: install_settings
install_settings:
	install -pm $(_OCT_rwrr) -t $(BIN_DIR) settings.bash


# Force the deletion of both libraries
clean:
	-rm -f libncdf.so
	-rm -f libncdf.a


# Figure out how fdict is linked...
# The reason is that it may be build automatically
# in the fdict sub-directory.

# First we define how to build the libfdict.a
# in the sub-directory
libfdict.a:
ifeq (0,$(BUILD_MAIN_DIR))
# Create the default makefile for fdict as we are in a sub-directory
	@mkdir -p fdict
	@echo "TOP_DIR = ../$(TOP_DIR)/fdict" > fdict/Makefile
	@echo "include \$$(TOP_DIR)/Makefile" >> fdict/Makefile
endif
ifdef SETUP
	$(MAKE) -C fdict "SETUP=../$(TOP_DIR)/$(SETUP)" lib
else
	$(MAKE) -C fdict lib
endif


# Check whether MPI is required
MPI ?= 0
ifeq (,$(findstring "NCDF_PARALLEL",$(CPPFLAGS) $(FPPFLAGS)))
MPI = 1
endif

ifeq (1,$(MPI))
libncdf.so: CC = $(MPICC)
endif


#    Check whether the library is defined
#    in the LIBS variable.
FDICT_LOCAL = 0
ifeq (,$(findstring "fdict",$(LIBS)))
FDICT_LOCAL = 1

# Add dependency (without adding the
# dependency to the list of targets ($^))
$(LIBRARIES): | libfdict.a


.PHONY: clean-fdict
clean-fdict:
	$(MAKE) -C fdict clean

clean: clean-fdict

endif


# The settings.bash file is here created from the fdict file
settings.bash: FORCE
	VPATH="$(TOP_DIR)" $(TOP_DIR)/setup.sh --default


# Local Variables:
#  mode: makefile-gmake
# End:
