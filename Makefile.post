_SMEKA_post = 1

#    Check whether the library is defined
#    in the LIBS variable.
FDICT_LOCAL = 0
ifndef FDICT_PREFIX
ifeq (,$(findstring fdict,$(LIBS)))
FDICT_LOCAL = 1

# Add dependency (without adding the
# dependency to the list of targets ($^))
$(LIBRARIES): | libfdict.a


.PHONY: clean-fdict
clean-fdict:
	$(MAKE) -C fdict clean

clean: clean-fdict

endif
endif


# If the fdict is local, we also generate the
# settings locally
ifeq (1,$(FDICT_LOCAL))

#   If it is not found define the appropriate
#   LIBS and LDFLAGS
LIBS += ./fdict/libfdict.a
INCLUDES += -I./fdict

# The settings.bash file is here created from the fdict file
settings.bash: FORCE
	VPATH="$(TOP_DIR)" $(TOP_DIR)/setup.sh --default

else

ifdef FDICT_PREFIX
settings.bash: FORCE
	-cp $(FDICT_PREFIX)/bin/settings.bash $(TOP_DIR)/
else

# Custom generation... (:) ! NOT GOOD
# This may go wrong if the user has
# build fdict with less than default settings...
settings.bash: FORCE
	-cp $(TOP_DIR)/.settings.bash $(TOP_DIR)/settings.bash
endif

endif


# Local Variables:
#  mode: makefile-gmake
# End:
